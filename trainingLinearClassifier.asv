function [W,MSE] = trainingLinearClassifier(trainingSet, t, alpha, iterations, initalValue)
    [Ntot,dimx] = size(trainingSet);    
    [C,~] = size(t);

    if nargin == 5
        W = initalValue;
        ma
    elseif nargin == 4
        W = ones(C,dimx+1);
    end
%     imagesPerClass = Ntot/C;
%     tk = eye(C);
%     tkAll = 
    for m = 1:iterations
        MSE_dW = zeros(size(W));
        MSE = 0;
        for k = 1:Ntot
            tk = t(:,k);
            xk = [trainingSet(k,:)'; 1];
            zk = W*xk;
            gk = sigmoid(zk);
            MSE_dgk = gk-tk;
            g_dzk = dot(gk, (1-gk));
            zk_dW = xk';
            MSE_dW = MSE_dW + MSE_dgk*g_dzk*zk_dW;
            MSE = MSE + 1/2*((gk-tk)')*(gk-tk);
        end 
        W = W - alpha*MSE_dW;
        disp(MSE)
    end
end

